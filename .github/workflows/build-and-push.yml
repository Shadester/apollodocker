name: Build and Push Apollo Docker Images

on:
  push:
    branches: [ main, master ]
    tags: [ 'v*' ]
  pull_request:
    branches: [ main, master ]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: shadester/apollodocker

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      actions: read

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v3

    - name: Log in to Container Registry
      if: github.event_name != 'pull_request'
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Extract metadata
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
        tags: |
          type=ref,event=branch
          type=ref,event=pr
          type=semver,pattern={{version}}
          type=semver,pattern={{major}}.{{minor}}
          type=semver,pattern={{major}}
          type=raw,value=latest,enable={{is_default_branch}}

    - name: Clean up disk space
      run: |
        docker system prune -f
        df -h

    - name: Build and push Docker image
      uses: docker/build-push-action@v6
      with:
        context: .
        platforms: linux/amd64,linux/arm64
        push: ${{ github.event_name != 'pull_request' }}
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        cache-from: type=gha
        cache-to: type=gha,mode=min
        secrets: |
          "github_token=${{ secrets.GITHUB_TOKEN }}"

    - name: Clean up after main build
      run: |
        docker system prune -f
        df -h

    - name: Build VS Code image
      uses: docker/build-push-action@v6
      with:
        context: .
        file: ./Dockerfile.vscode
        platforms: linux/amd64,linux/arm64
        push: ${{ github.event_name != 'pull_request' }}
        tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}-vscode:${{ steps.meta.outputs.version }}
        labels: ${{ steps.meta.outputs.labels }}
        cache-from: type=gha
        cache-to: type=gha,mode=min
        secrets: |
          "github_token=${{ secrets.GITHUB_TOKEN }}"

  test:
    runs-on: ubuntu-latest
    needs: build
    if: github.event_name == 'pull_request'

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Build test image
      uses: docker/build-push-action@v6
      with:
        context: .
        platforms: linux/amd64
        load: true
        tags: apollo-test:latest
        cache-from: type=gha
        secrets: |
          "github_token=${{ secrets.GITHUB_TOKEN }}"

    - name: Test toolchain installation
      run: |
        docker run --rm apollo-test:latest bash -c "
          source /opt/apollo/setup-env.sh && \
          m68k-amigaos-gcc --version && \
          m68k-amigaos-ld --version && \
          echo 'Toolchain test passed'
        "

    - name: Test simple compilation
      run: |
        docker run --rm apollo-test:latest bash -c "
          source /opt/apollo/setup-env.sh && \
          echo '#include <stdio.h>
          int main() { printf(\"Hello Apollo!\"); return 0; }' > test.c && \
          m68k-amigaos-gcc -m68080 -O2 test.c -o test && \
          echo 'Compilation test passed'
        "